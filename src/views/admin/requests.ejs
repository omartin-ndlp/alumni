<div class="container mt-4">
    <h1 class="mb-4"><%= __('admin.requests.title') %></h1>

    <% if (query.success === 'key_generated') { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= __('admin.requests.successMessage') %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            <hr>
            <pre id="generatedLinkMessage" class="bg-light p-3 border rounded"><%= __('admin.requests.welcomeMessage', { link: protocol + '://' + host + '/register/complete/' + query.key }) %></pre>
            <button type="button" class="btn btn-outline-secondary btn-sm js-copy-to-clipboard" data-message-target="#generatedLinkMessage"><%= __('admin.requests.copyMessage') %></button>
        </div>
    <% } %>

    <% if (requests.length > 0) { %>
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th><%= __('admin.requests.table.email') %></th>
                    <th><%= __('admin.requests.table.firstName') %></th>
                    <th><%= __('admin.requests.table.lastName') %></th>
                    <th><%= __('admin.requests.table.graduationYear') %></th>
                    <th><%= __('admin.requests.table.section') %></th>
                    <th><%= __('admin.requests.table.message') %></th>
                    <th><%= __('admin.requests.table.requestDate') %></th>
                    <th><%= __('admin.requests.table.status') %></th>
                    <th><%= __('admin.requests.table.actions') %></th>
                </tr>
            </thead>
            <tbody>
                <% requests.forEach(function(request) { %>
                    <tr id="request-<%= request.id %>">
                        <td><%= request.email %></td>
                        <td><%= request.prenom %></td>
                        <td><%= request.nom %></td>
                        <td><%= request.annee_diplome %></td>
                        <td><%= request.section_nom %></td>
                        <td>
                            <% if (request.message && request.message.length > 50) { %>
                                <%= request.message.substring(0, 50) %>...
                                <a href="#" class="read-more-btn" data-full-message="<%= request.message %>" data-bs-toggle="modal" data-bs-target="#messageModal"><%= __('admin.requests.buttons.viewLink') %></a>
                            <% } else { %>
                                <%= request.message || 'N/A' %>
                            <% } %>
                        </td>
                        <td><%= request.created_at.toLocaleDateString() %></td>
                        <td class="request-status">
                            <% if (request.registration_key) { %>
                                <span class="badge bg-success"><%= __('admin.requests.statusBadge.generated') %></span>
                            <% } else { %>
                                <span class="badge bg-warning text-dark"><%= __('admin.requests.statusBadge.pending') %></span>
                            <% } %>
                        </td>
                        <td class="request-actions">
                            <% if (request.registration_key) { %>
                                <button type="button" class="btn btn-info btn-sm js-show-magic-link" data-key="<%= request.registration_key %>" data-request-id="<%= request.id %>" data-protocol="<%= protocol %>" data-host="<%= host %>"><%= __('admin.requests.buttons.viewLink') %></button>
                            <% } else { %>
                                <button type="button" class="btn btn-success btn-sm js-generate-magic-link" data-request-id="<%= request.id %>"><%= __('admin.requests.buttons.generateLink') %></button>
                            <% } %>
                            <form action="/admin/requests/<%= request.id %>/reject" method="POST" style="display:inline; margin-left: 5px;">
                                <button type="submit" class="btn btn-danger btn-sm"><%= __('admin.requests.buttons.reject') %></button>
                            </form>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    <% } else { %>
        <div class="alert alert-info" role="alert">
            <%= __('admin.requests.noRequests') %>
        </div>
    <% } %>
</div>

<!-- Message Modal -->
<div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="messageModalLabel"><%= __('admin.requests.modals.fullMessage.title') %></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="fullMessageContent">
        <!-- Full message will be loaded here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><%= __('admin.requests.modals.close') %></button>
      </div>
    </div>
  </div>
</div>

<!-- Magic Link Modal -->
<div class="modal fade" id="magicLinkModal" tabindex="-1" aria-labelledby="magicLinkModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="magicLinkModalLabel"><%= __('admin.requests.modals.magicLink.title') %></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p><%= __('admin.requests.modals.magicLink.instruction') %></p>
        <pre id="magicLinkMessage" class="bg-light p-3 border rounded"></pre>
        <button type="button" class="btn btn-outline-secondary btn-sm mt-2 js-copy-to-clipboard" data-message-target="#magicLinkMessage"><%= __('admin.requests.copyMessage') %></button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><%= __('admin.requests.modals.close') %></button>
        <button type="button" class="btn btn-primary" disabled><%= __('admin.requests.modals.magicLink.sendEmail') %></button>
      </div>
    </div>
  </div>
</div>

<script>
  // Function to show the magic link modal
  window.showMagicLink = function(key, requestId, protocol, host) {
    const magicLinkMessage = document.getElementById('magicLinkMessage');
    const link = `${protocol}://${host}/register/complete/${key}`;
    const message = __('admin.requests.welcomeMessage', { link: link });
    magicLinkMessage.textContent = message;

    const magicLinkModalElement = document.getElementById('magicLinkModal');
    if (magicLinkModalElement) {
      const magicLinkModalInstance = new bootstrap.Modal(magicLinkModalElement);
      magicLinkModalInstance.show();
    } else {
      console.error("Magic Link Modal element not found.");
    }
  };

  // Function to copy text to clipboard
  window.copyToClipboard = function(button) {
    const targetSelector = button.dataset.messageTarget;
    console.log("Target Selector:", targetSelector);
    const targetElement = document.querySelector(targetSelector);
    console.log("Target Element:", targetElement);
    if (targetElement) {
      const textToCopy = targetElement.textContent;
      console.log("Text to Copy:", textToCopy);
      navigator.clipboard.writeText(textToCopy).then(() => {
        const originalText = button.textContent;
        button.textContent = 'Copied!';
        setTimeout(() => {
          button.textContent = originalText;
        }, 1500);
      }).catch(err => {
        console.error('Could not copy text: ', err);
      });
    } else {
      console.error("Target element not found for copying.");
    }
  };

  document.addEventListener('DOMContentLoaded', function () {
    const messageModal = document.getElementById('messageModal');
    messageModal.addEventListener('show.bs.modal', function (event) {
      const button = event.relatedTarget;
      const fullMessage = button.getAttribute('data-full-message');
      const modalBody = messageModal.querySelector('#fullMessageContent');
      modalBody.textContent = fullMessage;
    });

    // Attach event listeners for magic link buttons
    const magicLinkButtons = document.querySelectorAll('.js-show-magic-link');
    magicLinkButtons.forEach(button => {
      button.addEventListener('click', function() {
        const key = this.dataset.key;
        const requestId = this.dataset.requestId;
        const protocol = this.dataset.protocol;
        const host = this.dataset.host;
        window.showMagicLink(key, requestId, protocol, host);
      });
    });

    // Attach event listeners for generate magic link buttons
    const generateMagicLinkButtons = document.querySelectorAll('.js-generate-magic-link');
    generateMagicLinkButtons.forEach(button => {
      button.addEventListener('click', async function() {
        const requestId = this.dataset.requestId;
        const row = document.getElementById(`request-${requestId}`);
        const statusCell = row.querySelector('.request-status');
        const actionsCell = row.querySelector('.request-actions');

        // Disable the button and show loading indicator
        this.disabled = true;
        this.textContent = __('admin.requests.buttons.generating');
        this.classList.add('btn-secondary');
        this.classList.remove('btn-success');

        try {
          const response = await fetch(`/admin/requests/${requestId}/approve`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const data = await response.json();

          if (data.success) {
            // Update status badge
            statusCell.innerHTML = `<span class="badge bg-success">${__('admin.requests.statusBadge.generated')}</span>`;

            // Replace Generate button with View button
            const viewButton = `<button type="button" class="btn btn-info btn-sm js-show-magic-link" data-key="${data.key}" data-request-id="${requestId}" data-protocol="${window.location.protocol.slice(0, -1)}" data-host="${window.location.host}">${__('admin.requests.buttons.viewLink')}</button>`;
            actionsCell.querySelector('.js-generate-magic-link').outerHTML = viewButton;

            // Re-attach event listener to the new View button
            const newViewButton = actionsCell.querySelector('.js-show-magic-link');
            newViewButton.addEventListener('click', function() {
              const key = this.dataset.key;
              const reqId = this.dataset.requestId;
              const proto = this.dataset.protocol;
              const hst = this.dataset.host;
              window.showMagicLink(key, reqId, proto, hst);
            });

            // Show success alert and magic link modal
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-success alert-dismissible fade show';
            alertDiv.setAttribute('role', 'alert');
            alertDiv.innerHTML = `
                ${__('admin.requests.successMessage')}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <hr>
                <pre class="bg-light p-3 border rounded">${__('admin.requests.welcomeMessage', { link: `${window.location.protocol}//${window.location.host}/register/complete/${data.key}` })}</pre>
                <button type="button" class="btn btn-outline-secondary btn-sm js-copy-to-clipboard" data-message-target="#generatedLinkMessage">${__('admin.requests.copyMessage')}</button>
            `;
            document.querySelector('.container.mt-4').prepend(alertDiv);

            // Open the magic link modal
            window.showMagicLink(data.key, requestId, window.location.protocol.slice(0, -1), window.location.host);

          } else {
            // Handle error response from server
            alert(`${__('admin.requests.alerts.error', { error: data.error || __('admin.requests.alerts.linkGenerationFailed') })}`);
          }
        } catch (error) {
          console.error('Error generating magic link:', error);
          alert(`${__('admin.requests.alerts.genericError')}`);
        } finally {
          // Re-enable button if needed (though it's replaced here)
          this.disabled = false;
        }
      });
    });

    // Attach event listeners for copy to clipboard buttons
    const copyToClipboardButtons = document.querySelectorAll('.js-copy-to-clipboard');
    console.log("Found copy to clipboard buttons:", copyToClipboardButtons.length);
    copyToClipboardButtons.forEach(button => {
      button.addEventListener('click', function() {
        window.copyToClipboard(this);
      });
    });
  });
</script>

